"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BinaryExtractionTask = void 0;
var path_1 = require("path");
var ExifToolTask_1 = require("./ExifToolTask");
var String_1 = require("./String");
var StdoutRe = /\b(\d+) output files? created/i;
/**
 * Task that returns an error string (to prevent retries), or undefined if
 * everything seems to have worked.
 */
var BinaryExtractionTask = /** @class */ (function (_super) {
    __extends(BinaryExtractionTask, _super);
    function BinaryExtractionTask(args) {
        return _super.call(this, args) || this;
    }
    BinaryExtractionTask.for = function (tagname, imgSrc, imgDest) {
        var args = [
            "-b",
            "-" + tagname,
            path_1.resolve(imgSrc),
            "-w",
            // The %0f prevents shell escaping. See
            // https://exiftool.org/exiftool_pod.html#w-EXT-or-FMT--textOut
            "%0f" + path_1.resolve(imgDest),
        ];
        return new BinaryExtractionTask(args);
    };
    BinaryExtractionTask.prototype.parse = function (stdout, err) {
        var s = String_1.toS(stdout).trim();
        var m = StdoutRe.exec(s);
        if (err != null) {
            throw err;
        }
        else if (m == null) {
            throw new Error("Missing expected status message (got " + stdout + ")");
        }
        else if (m[1] === "1") {
            return;
        }
        else {
            // Don't retry: the binary payload is missing, and retrying won't fix that.
            return s;
        }
    };
    return BinaryExtractionTask;
}(ExifToolTask_1.ExifToolTask));
exports.BinaryExtractionTask = BinaryExtractionTask;
//# sourceMappingURL=BinaryExtractionTask.js.map