"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WriteTask = void 0;
var _path = __importStar(require("path"));
var DateTime_1 = require("./DateTime");
var ExifToolTask_1 = require("./ExifToolTask");
var Number_1 = require("./Number");
var Object_1 = require("./Object");
var String_1 = require("./String");
var Struct_1 = require("./Struct");
var successRE = /1 image files? (?:created|updated)/;
var sep = String.fromCharCode(31); // unit separator
// See https://exiftool.org/faq.html#Q10
// (`-charset utf8` is set by default)
var utfCharsetArgs = [
    "-charset",
    "filename=utf8",
    "-codedcharacterset=utf8",
    "-sep",
    "" + sep,
    "-E",
];
function enc(o) {
    if (o == null) {
        return "";
    }
    else if (Number_1.isNumber(o)) {
        return String(o);
    }
    else if (String_1.isString(o)) {
        return String_1.htmlEncode(String(o));
    }
    else if (DateTime_1.isDateOrTime(o)) {
        return DateTime_1.toExifString(o);
    }
    else if (Array.isArray(o)) {
        var primitiveArray = o.every(function (ea) { return String_1.isString(ea) || Number_1.isNumber(ea); });
        return primitiveArray
            ? "" + o.map(enc).join(sep)
            : "[" + o.map(enc).join(",") + "]";
    }
    else if (Struct_1.isStruct(o)) {
        return "{" + Object_1.keys(o)
            .map(function (k) { return enc(k) + " = " + enc(o[k]); })
            .join(",") + "}";
    }
    else {
        throw new Error("cannot encode " + JSON.stringify(o));
    }
}
var WriteTask = /** @class */ (function (_super) {
    __extends(WriteTask, _super);
    function WriteTask(sourceFile, args) {
        var _this = _super.call(this, args) || this;
        _this.sourceFile = sourceFile;
        _this.args = args;
        return _this;
    }
    WriteTask.for = function (filename, tags, optionalArgs) {
        var e_1, _a;
        if (optionalArgs === void 0) { optionalArgs = []; }
        var sourceFile = _path.resolve(filename);
        var args = __spread(utfCharsetArgs);
        try {
            for (var _b = __values(Object_1.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                var val = tags[key];
                args.push("-" + key + "=" + enc(val));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        optionalArgs.forEach(function (ea) { return args.push(ea); });
        args.push(sourceFile);
        return new WriteTask(sourceFile, args);
    };
    WriteTask.prototype.toString = function () {
        return "WriteTask(" + this.sourceFile + ")";
    };
    WriteTask.prototype.parse = function (data, err) {
        if (err != null)
            throw err;
        if (this.errors.length > 0)
            throw new Error(this.errors.join(";"));
        data = data.trim();
        if (successRE.exec(data) != null) {
            return;
        }
        else {
            throw new Error("No success message: " + data);
        }
    };
    return WriteTask;
}(ExifToolTask_1.ExifToolTask));
exports.WriteTask = WriteTask;
//# sourceMappingURL=WriteTask.js.map